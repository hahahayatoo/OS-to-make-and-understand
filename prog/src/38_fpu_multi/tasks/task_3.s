task_3:
        ;---------------------------------------
        ; 文字列の表示
        ;---------------------------------------
        cdecl   draw_str, 63, 2, 0x07, .s0      ; draw_str(.s0)

        ;---------------------------------------
        ; 初期化
        ;---------------------------------------
        fild    dword [.c1000]                  ; FPUスタックを以下の形に初期化
        fldpi                                   ; ST0 = 0: 初期値
        fidiv   dword [.c180]                   ; ST1 = 2π: 1周
        fldpi                                   ; ST2 = π/180: 角速度 ω
        fadd    st0, st0                        ; ST3 = 1000
        fldz                                    ; ----------------

        ;---------------------------------------
        ; メインループ
        ;---------------------------------------
.10L:
        ;---------------------------------------
        ; cos(t)
        ;---------------------------------------
        fadd    st0, st2                        ; ST0 += ST1        'Θ = Θ + ω'
        fprem                                   ; ST0 = ST0 mod ST1 'Θ = Θ mod 2π'
        fld     st0                             ; ST0の値（Θ）をFPUスタックに積む
        fcos                                    ; ST0 = cos(ST0)    'cos(Θ)'
        fmul    st0, st4                        ; ST0 *= ST4        '1000 * cos(Θ)'
        fbstp   [.bcd]                          ; ST0の整数部をバッファに格納して、FPUスタックをポップ
                                                ; （ST0にΘが格納されている以外は初期状態と同じ）

        ;---------------------------------------
        ; 表示用になんやかんや
        ;---------------------------------------
        mov     eax, [.bcd]                     ; EAX = 1000 * cos(Θ)
        mov     ebx, eax                        ; EBX = EAX

        and     eax, 0x0F0F                     ; 上位4ビットをマスク
        or      eax, 0x3030                     ; 文字コードに変換するために上位4ビットに0x3を設定

        shr     ebx, 4                          ; EBX >>= 4 EAXでマスクした上位4ビットが必要なので右に4ビットシフト
        and     ebx, 0x0F0F                     ; 上位4ビットをマスク
        or      ebx, 0x3030                     ; 文字コードに変換するために上位4ビットに0x3を設定

        mov     [.s2 + 0], bh                   ; 1桁目
        mov     [.s3 + 0], ah                   ; 小数第1位
        mov     [.s3 + 1], bl                   ; 小数第2位
        mov     [.s3 + 2], al                   ; 小数第3位

        mov     eax, 7                          ; 最上位ビットのMSBを見て表示する符号を判定
        bt      [.bcd + 9], eax                 ; CF = bcd[9] & 0x80
        jc      .10F                            ;

        mov     [.s1 + 0], byte '+'
        jmp     .10E

.10F:
        mov     [.s1 + 0], byte '-'

.10E:
        cdecl   draw_str, 72, 2, 0x07, .s1

        ;---------------------------------------
        ; ウェイト
        ;---------------------------------------
        cdecl   wait_tick, 10                   ; 100msのウェイト

        jmp     .10L

        ;---------------------------------------
        ; データ
        ;---------------------------------------
ALIGN 4,    db 0
.c1000:     dd 1000
.c180:      dd 180

.bcd:       times 10 dd 0x00

.s0:    db "Task-3", 0
.s1:    db "-"
.s2:    db "0."
.s3:    db "000", 0