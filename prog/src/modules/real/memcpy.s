memcpy:
        ;---------------------------------------
        ; 【スタックフレームの構築】
        ;---------------------------------------
                                                ; BP+ 0| BP（元の値）
                                                ; BP +2| IP（戻り番地）
                                                ; -----|-----------
                                                ; BP +4| コピー先（引数1）
                                                ; BP +6| コピー元（引数2）
        push    bp                              ; BP +8| バイト数（引数3）
        mov     bp, sp                          ; -----|-----------

        ;---------------------------------------
        ; 【レジスタの保存】
        ;---------------------------------------
        push    cx                              ; SP -14| DIレジスタ
        push    si                              ; SP -12| SIレジスタ
        push    di                              ; SP -10| CXレジスタ

        ;---------------------------------------
        ; バイト単位でのコピー
        ; movsb は 1バイトだけコピーするため
        ; rep を利用して CX の数だけ繰り返すことで
        ; コピーを実現 
        ;---------------------------------------
        cld                                     ; DF (Direction Flag) = 0; // +方向
        mov     di, [bp + 4]                    ; DIにコピー先を設定
        mov     si, [bp + 6]                    ; SIにコピー元を設定
        mov     cx, [bp + 8]                    ; CXにバイト数を設定

        rep movsb                               ; while (*DI++ = *SI++) ;

        ;---------------------------------------
        ; 【レジスタの復帰】
        ;---------------------------------------
         pop    di
         pop    si
         pop    cx

        ;---------------------------------------
        ; 【スタックフレームの破棄】
        ;---------------------------------------
        mov     sp, bp
        pop     bp

        ret