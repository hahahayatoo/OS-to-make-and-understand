KBC_Data_Write:
        ;---------------------------------------
        ; 【スタックフレームの構築】
        ;---------------------------------------
                                                ; BP +4| 書き込みデータ
                                                ; BP +2| IP（戻り番地）
        push    bp                              ; BP +0| BP（元の値）
        mov     bp, sp                          ; -----|----------

        ;---------------------------------------
        ; 【レジスタの保存】
        ;---------------------------------------
        push    cx

        ;---------------------------------------
        ; 【処理の開始】
        ;---------------------------------------
        mov     cx, 0                           ; 最大カウント値の設定

.10L:
        in      al, 0x64                        ; ポートアドレス 0x64 からKBCのステータスレジスタ取得
        test    al, 0x02                        ; ステータスレジスタ B1 を確認して書き込み可能か判断
        loopnz  .10L                            ;  while (--CX && !ZF)

        cmp     cx, 0                           ; CX が 0 であればタイムアウトと判断し
        jz      .20E                            ; 処理を終了する

        mov     al, [bp + 4]                    ; AL = 書き込みデータ
        out     0x60, al                        ; 書き込みデータをデータポート 0x60 に出力
.20E:

        mov     ax, cx                          ; CX の値を関数の戻り値として AX に格納

        ;---------------------------------------
        ; 【レジスタの復帰】
        ;---------------------------------------
        pop     cx

        ;---------------------------------------
        ; 【スタックフレームの破棄】
        ;---------------------------------------
        mov     sp, bp
        pop     bp

        ret

KBC_Data_Read:
        ;---------------------------------------
        ; 【スタックフレームの構築】
        ;---------------------------------------
                                                ; BP +4| 読み込みデータ格納アドレス
                                                ; BP +2| IP（戻り番地）
        push    bp                              ; BP +0| BP（元の値）
        mov     bp, sp                          ; -----|----------

        ;---------------------------------------
        ; 【レジスタの保存】
        ;---------------------------------------
        push    cx

        ;---------------------------------------
        ; 【処理の開始】
        ;---------------------------------------
        mov     cx, 0                           ; 最大カウント値の設定

.10L:
        in      al, 0x64                        ; ポートアドレス 0x64 からKBCのステータスレジスタ取得
        test    al, 0x01                        ; ステータスレジスタ B0 を確認して読み込み可能か判断
        loopz   .10L                            ;  while (--CX && ZF)

        cmp     cx, 0                           ; CX が 0 であればタイムアウトと判断し
        jz      .20E                            ; 処理を終了する

        mov     ah, 0x00                        ; AH = 0x00
        in      al, 0x60                        ; AL = inp(0x60)

        mov     di, [bp + 4]                    ; DI    = ptr
        mov     [di + 0], ax                    ; DI[0] = AX
.20E:

        mov     ax, cx                          ; CX の値を関数の戻り値として AX に格納

        ;---------------------------------------
        ; 【レジスタの復帰】
        ;---------------------------------------
        pop     cx

        ;---------------------------------------
        ; 【スタックフレームの破棄】
        ;---------------------------------------
        mov     sp, bp
        pop     bp

        ret

KBC_Cmd_Write:
        ;---------------------------------------
        ; 【スタックフレームの構築】
        ;---------------------------------------
                                                ; BP +4| 書き込みデータ
                                                ; BP +2| IP（戻り番地）
        push    bp                              ; BP +0| BP（元の値）
        mov     bp, sp                          ; -----|----------

        ;---------------------------------------
        ; 【レジスタの保存】
        ;---------------------------------------
        push    cx

        ;---------------------------------------
        ; 【処理の開始】
        ;---------------------------------------
        mov     cx, 0                           ; 最大カウント値の設定

.10L:
        in      al, 0x64                        ; ポートアドレス 0x64 からKBCのステータスレジスタ取得
        test    al, 0x02                        ; ステータスレジスタ B1 を確認して書き込み可能か判断
        loopnz  .10L                            ;  while (--CX && !ZF)

        cmp     cx, 0                           ; CX が 0 であればタイムアウトと判断し
        jz      .20E                            ; 処理を終了する

        mov     al, [bp + 4]                    ; AL = 書き込みデータ
        out     0x64, al                        ; コマンドを 0x64 に出力
.20E:

        mov     ax, cx                          ; CX の値を関数の戻り値として AX に格納

        ;---------------------------------------
        ; 【レジスタの復帰】
        ;---------------------------------------
        pop     cx

        ;---------------------------------------
        ; 【スタックフレームの破棄】
        ;---------------------------------------
        mov     sp, bp
        pop     bp

        ret