memcmp:
        ;---------------------------------------
        ; 【スタックフレームの構築】
        ;---------------------------------------
                                                ; BP+ 0| BP（元の値）
                                                ; BP +2| IP（戻り番地）
                                                ; -----|-----------
                                                ; BP +4| 比較アドレス1
                                                ; BP +6| 比較アドレス2
        push    bp                              ; BP +8| バイト数
        mov     bp, sp                          ; -----|-----------

        ;---------------------------------------
        ; 【レジスタの保存】
        ;---------------------------------------
        push    bx
        push    cx
        push    dx
        push    si
        push    di

        ;---------------------------------------
        ; 引数の取得
        ;---------------------------------------
        cld                                     ; DF (Direction Flag) = 0; // +方向
        mov     si, [bp + 4]                    ; SIにアドレス1を設定
        mov     di, [bp + 6]                    ; DIにアドレス2を設定
        mov     cx, [bp + 8]                    ; CXにバイト数を設定

        ;---------------------------------------
        ; バイト単位での比較
        ;---------------------------------------
        rep cmpsb                               ; 比較結果によってZFの値が変わる
        jnz     .10F                            ; ZFが立っていなければ不一致なので .10F に飛ぶ
        mov     ax, 0                           ; AX レジスタに 0 を格納する
        jmp     .10E                            ; .10E に飛ぶ .10E 以降は後処理だけ
.10F:
        mov ax, -1                              ; AX レジスタに -1 を格納する
.10E:

        ;---------------------------------------
        ; 【レジスタの復帰】
        ;---------------------------------------
         pop    di
         pop    si
         pop    dx
         pop    cx
         pop    bx

        ;---------------------------------------
        ; 【スタックフレームの破棄】
        ;---------------------------------------
        mov     sp, bp
        pop     bp

        ret