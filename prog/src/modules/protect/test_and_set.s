test_and_set:
        ;---------------------------------------
        ; 【スタックフレームの構築】
        ;---------------------------------------
                                                ; EBP +  8| ローカル変数のアドレス
                                                ; EBP +  4| EIP（戻り番地）
        push    ebp                             ; EBP +  0| EBP（元の値）
        mov     ebp, esp                        ; --------------------

        ;---------------------------------------
        ; 【レジスタの保存】
        ;---------------------------------------
        push    eax
        push    ebx

        ;---------------------------------------
        ; テスト&セット
        ;---------------------------------------
        mov     eax, 0                          ; local = 0
        mov     ebx, [ebp + 8]                  ; global = アドレス

.10L:
        lock bts    [ebx], eax                  ; IN_USEをテスト&セット
        jnc     .10E                            ; 1ならIN_USEの状態を確認するだけのループに入る
                                                ; 0なら自タスクがIN_USEに1をセットしたことになる

.12L:
        bt      [ebx], eax                      ; IN_USEの状態を確認する
        jc      .12L                            ; 1なら他のタスクがIN_USEをセットしているのでループ続行
        jmp     .10L                            ; 0ならループを抜けてIN_USEのテスト&セットを実施

.10E:

        ;---------------------------------------
        ; 【レジスタの復帰】
        ;---------------------------------------
        pop     ebx
        pop     eax

        ;---------------------------------------
        ; 【スタックフレームの破棄】
        ;---------------------------------------
        mov     esp, ebp
        pop     ebp

        ret