draw_str:
        ;---------------------------------------
        ; 【スタックフレームの構築】
        ;---------------------------------------
                                                ; EBP + 20| 文字列のアドレス
                                                ; EBP + 16| 描画色
                                                ; EBP + 12| 行
                                                ; EBP +  8| 列
                                                ; EBP +  4| IP（戻り番地）
        push    ebp                             ; EBP +  0| BP（元の値）
        mov     ebp, esp                        ; ------|-----------

        ;---------------------------------------
        ; 【レジスタの保存】
        ;---------------------------------------
        push    eax
        push    ebx
        push    ecx
        push    edx
        push    esi
        push    edi

        ;---------------------------------------
        ; 処理の開始
        ;---------------------------------------
        mov     ecx, [ebp + 8]                  ; ECX = 列
        mov     edx, [ebp + 12]                 ; EDX = 行
        movzx   ebx, word [ebp + 16]            ; EBX = 文字色
        mov     esi, [ebp + 20]                 ; ESI = 文字列のアドレス

        ;---------------------------------------
        ; 文字列の表示
        ;---------------------------------------
        cld                                     ; DF = 0 //アドレス加算

.10L:
        lodsb                                   ; 表示する文字の取得
        cmp     al, 0                           ; 文字列の終端（0）か確認
        je      .10E

        cdecl   draw_char, ecx, edx, ebx, eax

        inc     ecx                             ; 次の表示列算出する。
        cmp     ecx, 80                         ; 次の表示列が80文字以上かを確認して
        jl      .12E                            ; 80文字未満であれば次の文字の出力へ移行し、
        mov     ecx, 0                          ; 80文字以上であれば列を初期化するとともに
        inc     edx                             ; 次の表示列を算出する。
        cmp     edx, 30                         ; 次の表示列が30行目以上かを確認して
        jl      .12E                            ; 30行未満であれば次の文字の出力へ移行し、
        mov     edx, 0                          ; 30行以上であれば行を初期化する

.12E:
        jmp     .10L
.10E:

        ;---------------------------------------
        ; 【レジスタの復帰】
        ;---------------------------------------
         pop    edi
         pop    esi
         pop    edx
         pop    ecx
         pop    ebx
         pop    eax

        ;---------------------------------------
        ; 【スタックフレームの破棄】
        ;---------------------------------------
        mov     esp, ebp
        pop     ebp

        ret