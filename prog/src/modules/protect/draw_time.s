draw_time:
        ;---------------------------------------
        ; 【スタックフレームの構築】
        ;---------------------------------------
                                                ; EBP + 20| 時刻データ
                                                ; EBP + 16| 描画色
                                                ; EBP + 12| 行
                                                ; EBP +  8| 列
                                                ; EBP +  4| IP（戻り番地）
        push    ebp                             ; EBP +  0| BP（元の値）
        mov     ebp, esp                        ; --------|-----------

        ;---------------------------------------
        ; 【レジスタの保存】
        ;---------------------------------------
        push    eax
        push    ebx

        ;---------------------------------------
        ; 時刻データを文字に変換
        ;---------------------------------------
        mov     eax, [ebp + 20]                 ; EAX = 時刻データ

        movzx   ebx, al                         ; EBX = 秒
        cdecl   itoa, ebx, .sec, 2, 16, 0b0100  ; 文字に変換

        mov     bl, ah                          ; EBX = 分
        cdecl   itoa, ebx, .min, 2, 16, 0b0100  ; 文字に変換

        shr     eax, 16                         ; EAX = 時
        cdecl   itoa, eax, .hour, 2, 16, 0b0100 ; 文字に変換

        ;---------------------------------------
        ; 時刻を描画
        ;---------------------------------------
        cdecl   draw_str, dword [ebp + 8], dword [ebp + 12], dword [ebp + 16], .hour

        ;---------------------------------------
        ; 【レジスタの復帰】
        ;---------------------------------------
         pop    ebx
         pop    eax

        ;---------------------------------------
        ; 【スタックフレームの破棄】
        ;---------------------------------------
        mov     esp, ebp
        pop     ebp

        ret

.hour:  db "ZZ:"
.min:   db "ZZ:"
.sec:   db "ZZ", 0